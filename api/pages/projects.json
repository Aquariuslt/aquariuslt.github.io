{"key":"projects","path":"/pages/projects","title":"Projects | zexo.dev","url":"https://zexo.dev/pages/projects","breadcrumbs":{"@context":"https://schema.org","@type":"BreadcrumbList","itemListElement":[{"@type":"ListItem","item":"https://zexo.dev","name":"Home","position":1},{"@type":"ListItem","item":"https://zexo.dev/pages/projects","name":"Projects","position":2}]},"metas":[{"name":"google-site-verification","content":"s3PYm0fCo0ImPqqXoPLiUb_bFdlYODKw54VGSkcFgyE"},{"id":"google-analytics","name":"google-analytics","content":"UA-68904127-1"},{"name":"og:site_name","content":"zexo.dev"},{"name":"og:type","content":"website"},{"name":"og:title","content":"Projects"},{"name":"og:description","content":"介绍下我放在 Github 上的项目。个人博客及其框架。项目地址\n"},{"name":"og:image","content":"./projects.png"},{"name":"og:type","content":"article"},{"name":"description","content":"介绍下我放在 Github 上的项目。个人博客及其框架。项目地址\n"}],"type":"DETAIL","data":{"title":"Projects","id":"projects","created":"2019-02-14T00:00:00.000Z","updated":"2020-02-14T00:00:00.000Z","categories":[],"tags":[],"cover":"/pages/projects/projects.png","images":[],"toc":[{"label":"Projects","level":1,"id":"projects","position":0,"children":[{"label":"blog","level":2,"id":"blog","position":1,"children":[],"pid":0},{"label":"nestx-amqp","level":2,"id":"nestx-amqp","position":2,"children":[],"pid":0},{"label":"properties-json-loader","level":2,"id":"properties-json-loader","position":3,"children":[],"pid":0},{"label":"jest-properties-loader","level":2,"id":"jest-properties-loader","position":4,"children":[],"pid":0},{"label":"react-disqus-components","level":2,"id":"react-disqus-components","position":5,"children":[],"pid":0},{"label":"nest-rabbitmq-appender","level":2,"id":"nest-rabbitmq-appender","position":6,"children":[],"pid":0}],"pid":-1}],"summary":"介绍下我放在 Github 上的项目。个人博客及其框架。项目地址\n","src":"\n# Projects\n\n> 介绍下我放在 [Github](https://github.com/aquariuslt?tab=repositories) 上的项目。\n\n## blog\n\n个人博客及其框架。\n\n[项目地址](https://github.com/aquariuslt/blog)\n\n## nestx-amqp\n\n一个 NestJS x [amqp-connection-manager](https://www.npmjs.com/package/amqp-connection-manager) 的模块。提供了一个 Symbol 为 `AMQP_CONNECTION` 的单例 AMQP Connection.\n\n[NPM 地址](https://www.npmjs.com/package/nestx-amqp)\n\n[项目地址](https://github.com/aquariuslt/nestx-amqp)\n\n## properties-json-loader\n\n一个 Webpack Loader 插件，基于 [properties](https://www.npmjs.com/package/properties) 针对 `*.properties` 格式文件做解析。使其可以通过 `require` 或者 `import` 合法的 `properties` 文件，并转化为 JSON 值对象。\n\n初衷是为了以 `properties` 文件作为纯前端的 i18n 相关映射值时，能够提供一个比 `json` 描述更好的体验。也更好的可以从 Java 系主流的国际化方案配置文件方便地迁移过来。\n\n[NPM 地址](https://www.npmjs.com/package/properties-json-loader)\n\n[项目地址](https://github.com/aquariuslt/properties-json-loader)\n\n## jest-properties-loader\n\n一个 Jest Transformer 插件，同样也是基于 [properties](https://www.npmjs.com/package/properties) 提供的能力。在执行 Jest 单元测试时使用，以供得到与 Webpack Loader 一致的体验。\n\n[NPM 地址](https://www.npmjs.com/package/jest-properties-loader)\n\n[项目地址](https://github.com/aquariuslt/jest-properties-loader)\n\n## react-disqus-components\n\n由于官方的 [disqus-react](https://github.com/disqus/disqus-react) 使用了很多 react 标记为 deprecated 的生命周期，所以使用 FunctionalComponent + hooks 的形式造了个同等通能的轮子。(仅适用于 React 16.8 +)\n\n[NPM 地址](https://www.npmjs.com/package/react-disqus-components)\n\n[项目地址](https://github.com/aquariuslt/react-disqus-components)\n\n## nest-rabbitmq-appender\n\n一个 [NestJS](https://nestjs.com) 的 LoggerAppender Module，以 NPM Package 的形式发布。\n\n主要目的是提供一个异步的远程日志输出方式，协助将应用内部打印的日志发送到 RabbitMQ 中。(方便后续 RabbitMQ 消费者，如 LogStash -> ES 后续的日志聚合功能)\n\n[NPM 地址](https://www.npmjs.com/package/nest-rabbitmq-appender)\n\n[项目地址](https://github.com/aquariuslt/nest-rabbitmq-appender)\n","html":"<h1 id=\"projects\">Projects</h1>\n<blockquote>\n<p>介绍下我放在 <a href=\"https://github.com/aquariuslt?tab=repositories\">Github</a> 上的项目。</p>\n</blockquote>\n<h2 id=\"blog\">blog</h2>\n<p>个人博客及其框架。</p>\n<p><a href=\"https://github.com/aquariuslt/blog\">项目地址</a></p>\n<h2 id=\"nestx-amqp\">nestx-amqp</h2>\n<p>一个 NestJS x <a href=\"https://www.npmjs.com/package/amqp-connection-manager\">amqp-connection-manager</a> 的模块。提供了一个 Symbol 为 <code>AMQP_CONNECTION</code> 的单例 AMQP Connection.</p>\n<p><a href=\"https://www.npmjs.com/package/nestx-amqp\">NPM 地址</a></p>\n<p><a href=\"https://github.com/aquariuslt/nestx-amqp\">项目地址</a></p>\n<h2 id=\"properties-json-loader\">properties-json-loader</h2>\n<p>一个 Webpack Loader 插件，基于 <a href=\"https://www.npmjs.com/package/properties\">properties</a> 针对 <code>*.properties</code> 格式文件做解析。使其可以通过 <code>require</code> 或者 <code>import</code> 合法的 <code>properties</code> 文件，并转化为 JSON 值对象。</p>\n<p>初衷是为了以 <code>properties</code> 文件作为纯前端的 i18n 相关映射值时，能够提供一个比 <code>json</code> 描述更好的体验。也更好的可以从 Java 系主流的国际化方案配置文件方便地迁移过来。</p>\n<p><a href=\"https://www.npmjs.com/package/properties-json-loader\">NPM 地址</a></p>\n<p><a href=\"https://github.com/aquariuslt/properties-json-loader\">项目地址</a></p>\n<h2 id=\"jest-properties-loader\">jest-properties-loader</h2>\n<p>一个 Jest Transformer 插件，同样也是基于 <a href=\"https://www.npmjs.com/package/properties\">properties</a> 提供的能力。在执行 Jest 单元测试时使用，以供得到与 Webpack Loader 一致的体验。</p>\n<p><a href=\"https://www.npmjs.com/package/jest-properties-loader\">NPM 地址</a></p>\n<p><a href=\"https://github.com/aquariuslt/jest-properties-loader\">项目地址</a></p>\n<h2 id=\"react-disqus-components\">react-disqus-components</h2>\n<p>由于官方的 <a href=\"https://github.com/disqus/disqus-react\">disqus-react</a> 使用了很多 react 标记为 deprecated 的生命周期，所以使用 FunctionalComponent + hooks 的形式造了个同等通能的轮子。(仅适用于 React 16.8 +)</p>\n<p><a href=\"https://www.npmjs.com/package/react-disqus-components\">NPM 地址</a></p>\n<p><a href=\"https://github.com/aquariuslt/react-disqus-components\">项目地址</a></p>\n<h2 id=\"nest-rabbitmq-appender\">nest-rabbitmq-appender</h2>\n<p>一个 <a href=\"https://nestjs.com\">NestJS</a> 的 LoggerAppender Module，以 NPM Package 的形式发布。</p>\n<p>主要目的是提供一个异步的远程日志输出方式，协助将应用内部打印的日志发送到 RabbitMQ 中。(方便后续 RabbitMQ 消费者，如 LogStash -&gt; ES 后续的日志聚合功能)</p>\n<p><a href=\"https://www.npmjs.com/package/nest-rabbitmq-appender\">NPM 地址</a></p>\n<p><a href=\"https://github.com/aquariuslt/nest-rabbitmq-appender\">项目地址</a></p>\n"}}