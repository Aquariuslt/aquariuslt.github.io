{"key":"Github","url":"https://zexo.dev/tags/github","path":"/tags/github","title":"Tag: Github - zexo.dev","breadcrumbs":{"@context":"https://schema.org","@type":"BreadcrumbList","itemListElement":[{"@type":"ListItem","item":"https://zexo.dev","name":"Home","position":1},{"@type":"ListItem","item":"https://zexo.dev/tags","name":"Tags","position":2},{"@type":"ListItem","item":"https://zexo.dev/tags/github","name":"Github","position":3}]},"metas":[{"name":"google-site-verification","content":"s3PYm0fCo0ImPqqXoPLiUb_bFdlYODKw54VGSkcFgyE"},{"id":"google-analytics","name":"google-analytics","content":"UA-68904127-2"},{"name":"og:site_name","content":"zexo.dev"},{"name":"og:type","content":"website"},{"name":"og:description","itemprop":"description","content":"Tag: Github"},{"name":"description","itemprop":"description","content":"Tag: Github"}],"type":"LIST","data":[{"title":"Using bundlewatch instead of bundlesize","id":"using-bundlewatch-instead-of-bundlesize","created":"2020-04-04T00:00:00.000Z","updated":"2020-04-04T00:00:00.000Z","categories":["Blog"],"tags":["CI","Webpack","Github"],"cover":"/posts/2020/04/04/using-bundlewatch-instead-of-bundlesize/bundlewatch-graph.png","summary":"在 github 上托管的开源项目，特别是对构建产物有体积要求的项目，经常会用到一个叫 bundlesize 的集成服务。https://github.com/siddharthkp/bundlesize\n","link":"/posts/2020/04/04/using-bundlewatch-instead-of-bundlesize"},{"title":"使用 renovate 监控第三方依赖更新","id":"keep-your-repo-dependencies-up-to-date-with-renovate","created":"2020-03-01T00:00:00.000Z","updated":"2020-03-18T00:00:00.000Z","categories":["Blog"],"tags":["Node","CI","NPM","Renovate","Github"],"cover":"/posts/2020/03/01/keep-your-repo-dependencies-up-to-date-with-renovate/revonate.png","summary":"依赖更新管理曾一直是我容易纠结的一个问题。我希望一直保持我的仓库使用的第三方 package 一直能保持 安全情况下 的最新版本，随着最新版本的更新，一般伴随着以下几种用户关心的内容：fixing: 修复了一些 bugperformance tuning: 一些性能优化\n","link":"/posts/2020/03/01/keep-your-repo-dependencies-up-to-date-with-renovate"},{"title":"Github Actions: New YAML Syntax","id":"github-actions-new-yaml-syntax","created":"2019-08-18T00:00:00.000Z","updated":"2019-08-18T00:00:00.000Z","categories":["Blog"],"tags":["NPM","CI","Github","TravisCI","Actions","Docker"],"cover":"/posts/2019/08/18/github-actions-new-yaml-syntax/migrating-github-actions.png","summary":"在之前一篇博文里刚介绍完 Github Actions 配置的HCL语法不久，Github 官方就标记为 deprecated 了。原因是社区声音推崇他们使用新的 YAML 语法，这类的语法配置与现有的其他 CI 平台相对更加接近，更加容易举一反三写出合理的配置。\n","link":"/posts/2019/08/18/github-actions-new-yaml-syntax"},{"title":"Github Actions: Overview and Practice","id":"github-actions-overview-and-practice","created":"2019-07-07T00:00:00.000Z","updated":"2019-07-07T00:00:00.000Z","categories":["Blog"],"tags":["NPM","CI","Github","TravisCI","Actions","Docker"],"cover":"/posts/2019/07/07/github-actions-overview-and-practice/github-actions.png","summary":"Github Actions 自从开放 beta 以来，感觉一直没有掀起什么大浪。但是他的在 CI 平台插件方面的概念其实是符合一直以来的方向的: Docker Image as Plugins我在二月份开始已经申请到了 Github Actions Beta 的体验许可，为了体验 Github Actions 的功能，以及跟目前其他开源项目所用的持续集成平台进行简单的对比，下面将以一个 通过 Gtihub Action 发布 npm package 的过程作为初步体验，讲讲我对 Github Actions 在 CI 方面的认识。\n","link":"/posts/2019/07/07/github-actions-overview-and-practice"},{"title":"Latest Update on Blog App","id":"latest-update-on-blog-app","created":"2018-03-03T00:00:00.000Z","updated":"2018-03-03T00:00:00.000Z","categories":["Blog"],"tags":["Vue","JavaScript","Webpack","Karma","Gulp","Github","Blog"],"cover":"/posts/2018/03/03/latest-update-on-blog-app/cover.png","summary":"结合最近学到的一些知识，了解的一些规范，和实践过的一些新姿势，重构了 Blog 的整个应用。目前 Vue Branch 版本从4.0.0-beta 到了4.0.1 ，算是可以标记 release 的一个版本了。项目地址不变。(除了最近更新过一次 Github account 的 url，开头从大写变成小写，对其他第三方服务迁移的时候有点麻烦)。\n","link":"/posts/2018/03/03/latest-update-on-blog-app"}]}